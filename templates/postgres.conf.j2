# -----------------------------
# PostgreSQL configuration file
# -----------------------------
# {{ ansible_managed }}
#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------
data_directory = '{{ postgres_datadir }}/{{ postgres_version }}/data'		# use data in another directory
				
hba_file = '{{ postgres_confdir }}/pg_hba.conf'	# host-based authentication file
				
ident_file = '{{ postgres_confdir }}/pg_ident.conf'	# ident configuration file
				
external_pid_file = '{{ postgres_piddir }}/{{ postgres_version }}-main.pid'
#----------------------------------------------------------------------

listen_addresses = '{{ postgres_host_address }}'
port = {{ postgres_port }}			
max_connections = {{ postgres_max_connections }}
{% if postgres_su_connections >= 3 %}		
superuser_reserved_connections = {{ postgres_su_connections }}
{% endif %}

unix_socket_directories = '{{ postgres_piddir }}'	

{% if postgres_advertise_bonjour %}							
bonjour = on
bonjour_name = '{{ postgres_version }}-{{ inventory_hostname }}'
{% endif %}				

{% if postgres_ssl %}
ssl = true			
#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
				
#ssl_prefer_server_ciphers = on	
#ssl_ecdh_curve = 'prime256v1'	
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'	
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'	
#ssl_ca_file = ''		
#ssl_crl_file = ''
{% endif %}		
# - Security and Authentication -

authentication_timeout = {{ postgres_auth_timeout }}
password_encryption = {{ postgres_pw_encryption }}
db_user_namespace = {{ postgres_user_namespace }}
row_security = {{ postgres_row_security }}

{% if postgres_gssapi %}
# GSSAPI using Kerberos
#krb_server_keyfile = ''
#krb_caseins_users = off
{% endif %}


tcp_keepalives_idle = {{ postgres_tcp_idle }}
tcp_keepalives_interval = {{ postgres_tcp_interval }}
tcp_keepalives_count = {{ postgres_tcp_count }}


shared_buffers = {{ postgres_shared_buffers }}			# min 128kB
				
huge_pages = {{ postgres_huge_pages }}			# on, off, or try
				
temp_buffers = {{ postgres_tmp_buffers }}			# min 800kB
max_prepared_transactions = {{ postgres_max_prep_transactions }} 
				
# Caution: it is not advisable to set max_prepared_transactions nonzero unless
# you actively intend to use prepared transactions.

work_mem = {{ postgres_work_mem }}
maintenance_work_mem = {{ postgres_maint_work_mem }}		# min 1MB
replacement_sort_tuples = {{ postgres_tupl_repl_sort }}	
autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
max_stack_depth = 2MB			# min 100kB
dynamic_shared_memory_type = posix	

#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

{% if postgres_mode == 'master' %}
# - Sending Server(s) -

# Set these on the master and on any standby that will send replication data.
max_wal_senders = 0		# max number of walsender processes
		
wal_keep_segments = 0		# in logfile segments, 16MB each; 0 disables
wal_sender_timeout = 60s	# in milliseconds; 0 disables
max_replication_slots = 0	# max number of replication slots
		
track_commit_timestamp = off	# collect timestamp of transaction commit		

synchronous_standby_names = '*'	# standby servers that provide sync rep
			# number of sync standbys and comma-separated list of application_name
			# from standby(s); '*' = all
vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
{% elif postgres_mode == 'hotstandby' %}	

hot_standby = on			# "on" allows queries during recovery
			
max_standby_archive_delay = 30s	# max delay before canceling queries
				# when reading WAL from archive;
				# -1 allows indefinite delay
max_standby_streaming_delay = 30s	# max delay before canceling queries
				# when reading streaming WAL;
				# -1 allows indefinite delay
wal_receiver_status_interval = 10s	# send replies at least this often
				# 0 disables
hot_standby_feedback = on		# send info from standby to prevent
				# query conflicts
wal_receiver_timeout = 60s		# time that receiver waits for
				# communication from master
				# in milliseconds; 0 disables
wal_retrieve_retry_interval = 5s	# time to wait before retrying to
				# retrieve WAL after a failed attempt

{% endif %}

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# - Planner Method Configuration -

#enable_bitmapscan = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_indexscan = on
#enable_indexonlyscan = on
#enable_material = on
#enable_mergejoin = on
#enable_nestloop = on
#enable_seqscan = on
#enable_sort = on
#enable_tidscan = on

# - Planner Cost Constants -

#seq_page_cost = 1.0			# measured on an arbitrary scale
#random_page_cost = 4.0			# same scale as above
#cpu_tuple_cost = 0.01			# same scale as above
#cpu_index_tuple_cost = 0.005		# same scale as above
#cpu_operator_cost = 0.0025		# same scale as above
#parallel_tuple_cost = 0.1		# same scale as above
#parallel_setup_cost = 1000.0	# same scale as above
#min_parallel_relation_size = 8MB
#effective_cache_size = 4GB

# - Genetic Query Optimizer -

#geqo = on
#geqo_threshold = 12
#geqo_effort = 5			# range 1-10
#geqo_pool_size = 0			# selects default based on effort
#geqo_generations = 0			# selects default based on effort
#geqo_selection_bias = 2.0		# range 1.5-2.0
#geqo_seed = 0.0			# range 0.0-1.0

# - Other Planner Options -

#default_statistics_target = 100	# range 1-10000
#constraint_exclusion = partition	# on, off, or partition
#cursor_tuple_fraction = 0.1		# range 0.0-1.0
#from_collapse_limit = 8
#join_collapse_limit = 8		# 1 disables collapsing of explicit
					# JOIN clauses
#force_parallel_mode = off


#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

log_destination = 'syslog'		# Valid values are combinations of
					# stderr, csvlog, syslog, and eventlog,
					# depending on platform.  csvlog
					# requires logging_collector to be on.


syslog_facility = 'LOCAL0'
syslog_ident = 'postgres'
syslog_sequence_numbers = on
syslog_split_messages = on
log_timezone = 'localtime'


lc_messages = '{{ postgres_locale }}'	
lc_monetary = '{{ postgres_locale }}'			# locale for monetary formatting
lc_numeric = '{{ postgres_locale }}'			# locale for number formatting
lc_time = '{{ postgres_locale }}'				# locale for time formatting
timezone = '{{ postgres_timezone }}'
datestyle = 'iso, mdy'
default_text_search_config = 'pg_catalog.{{ postgres_lang }}'

cluster_name = '{{ postgres_version }}/main'
